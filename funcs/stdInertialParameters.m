function dyn = stdInertialParameters(robot_model)

    if robot_model == 4 || robot_model == 5 % RX160/L
        % https://github.com/ros-industrial/staubli/blob/melodic-devel/staubli_rx160_support/urdf/rx160.urdf
        % https://github.com/ros-industrial/staubli/blob/melodic-devel/staubli_rx160_support/urdf/rx160l.urdf
        if robot_model == 5 % RX160L
            m_j = [45.357763; 51.266495; 19.754401; 27.640019; 0.548088; 0.038484];
        else
            m_j = [45.357763; 51.266495; 19.754401; 15.287896; 0.548088; 0.038484];
        end

        rj_jcj(:,:,1) = [0.085479;-0.002547;-0.040488];
        rj_jcj(:,:,2) = [-0.000002;0.264164;0.347704];
        rj_jcj(:,:,3) = [-0.000255;0.016478;-0.003819];
        if robot_model == 5 % RX160L
            rj_jcj(:,:,4) = [-0.009602;0.000028;0.472641];
        else
            rj_jcj(:,:,4) = [-0.015515;0.000164;0.340348];
        end
        rj_jcj(:,:,5) = [0.000000;-0.000347;0.023671];
        rj_jcj(:,:,6) = [-0.000245;0.000000;-0.007626];

        Ij_cj(:,:,1) = symmetrize(0.839141,0.022637,0.162457 ...
                                            ,1.030146,0.027416 ...
                                                    ,1.064698);
    
        Ij_cj(:,:,2) = symmetrize(5.272800,0.000010,0.000017 ...
                                            ,5.536809,-0.008261 ...
                                                    ,0.486191);
    
        Ij_cj(:,:,3) = symmetrize(0.249388,-0.004901,0.004825  ...
                                            ,0.211780,0.000574  ...
                                                    ,0.238488);
        
        if robot_model == 5 % RX160L
            Ij_cj(:,:,4) = symmetrize(1.378080,0.000062,-0.042670 ...
        	                                    ,1.366754,0.000069 ...
                                                        ,0.170331);
        else
            Ij_cj(:,:,4) = symmetrize(0.331593,0.000055,-0.010688 ...
        	                                    ,0.320895,0.000058 ...
                                                        ,0.086557);
        end
        
        Ij_cj(:,:,5) = symmetrize(0.000876,0.000000,0.000000 ...
        	                                ,0.000889,0.000005 ...
                                                    ,0.000412);
    
        Ij_cj(:,:,6) = symmetrize(0.000011,0.000000,0.000000 ...
        	                                ,0.000011,0.000000 ...
                                                    ,0.000021);
    
    elseif robot_model == 3 % Z1
        % https://github.com/unitreerobotics/unitree_ros/blob/master/robots/z1_description/xacro/z1.urdf
        m_j = [0.67332551;1.19132258;0.83940874;0.56404563;0.38938492;0.28875807];
    
        rj_jcj(:,:,1) = [2.47e-06;-0.00025198;0.02317169];
        rj_jcj(:,:,2) = [-0.11012601;0.00240029;0.00158266];
        rj_jcj(:,:,3) = [0.10609208;-0.00541815;0.03476383];
        rj_jcj(:,:,4) = [0.04366681;0.00364738;-0.00170192];
        rj_jcj(:,:,5) = [0.03121533;0.0;0.00646316];
        rj_jcj(:,:,6) = [0.0241569 -0.00017355 -0.00143876];

        Ij_cj(:,:,1) = symmetrize(0.00128328,-6e-08,-4e-07 ...
                                  ,0.00071931,5e-07 ...
                                   ,0.00083936);
        Ij_cj(:,:,2) = symmetrize(0.00102138,0.00062358,5.13e-06 ...
                                  ,0.02429457,-2.1e-06 ...
                                   ,0.02466114);
        Ij_cj(:,:,3) = symmetrize(0.00108061,-8.669e-05,-0.00208102 ...
                                  ,0.00954238,-1.332e-05 ...
                                   ,0.00886621);
        Ij_cj(:,:,4) = symmetrize(0.00031576,8.13e-05,4.091e-05 ...
                                  ,0.00092996,-5.96e-06 ...
                                   ,0.00097912);
        Ij_cj(:,:,5) = symmetrize(0.00017605,4e-07,5.689e-05 ...
                                  ,0.00055896,-1.3e-07 ...
                                   ,0.0005386);
        Ij_cj(:,:,6) = symmetrize(0.00018328,1.22e-06,5.4e-07 ...
                                  ,0.0001475,8e-08 ...
                                   ,0.0001468);
        
    elseif robot_model == 2 % UR3
        % https://github.com/Daniella1/urdf_files_dataset/blob/main/urdf_files/ros-industrial/xacro_generated/universal_robots/ur_description/urdf/ur3.urdf
        m_j = [2.0;3.42;1.26;0.8;0.8;0.35];
    
        rj_jcj(:,:,1) = [0;0;0.1198];
        rj_jcj(:,:,2) = [-0.121825;0.0;0.12];
        rj_jcj(:,:,3) = [-0.106625;0.0;0.0275];
        rj_jcj(:,:,4) = [0;0;-0.085];
        rj_jcj(:,:,5) = [0;0;-0.085];
        rj_jcj(:,:,6) = [0;0;-0.082];

        Ij_cj(:,:,1) = symmetrize(0.008093163429399999,0.0,0.0 ...
                                  ,0.008093163429399999,0.0 ...
                                   ,0.005625);
        Ij_cj(:,:,2) = symmetrize(0.021728483221103233,0.0,0.0 ...
                                  ,0.021728483221103233,0.0 ...
                                   ,0.00961875);
        Ij_cj(:,:,3) = symmetrize(0.006546806443776375,0.0,0.0 ...
                                  ,0.006546806443776375,0.0 ...
                                   ,0.00354375);
        Ij_cj(:,:,4) = symmetrize(0.0016106408557434,0.0,0.0 ...
                                  ,0.0016106408557434,0.0 ...
                                   ,0.00225);
        Ij_cj(:,:,5) = symmetrize(0.0015721733711303997,0.0,0.0 ...
                                  ,0.0015721733711303997,0.0 ...
                                   ,0.00225);
        Ij_cj(:,:,6) = symmetrize(0.00013626661215999998,0.0,0.0 ...
                                  ,0.00013626661215999998,0.0 ...
                                   ,0.0001792);
        
    elseif robot_model == 1 % FER
        % Not from here: https://github.com/frankaemika/franka_description/blob/main/robots/fer/inertials.yaml
        % From here: https://github.com/marcocognetti/FrankaEmikaPandaDynModel/tree/master/pdf
        m_j = [4.970684;0.646926;3.228604;3.587895;1.225946;1.666555;7.35522e-01];
    
        rj_jcj(:,:,1) = [3.875e-03;2.081e-03;0];
        rj_jcj(:,:,2) = [-3.141e-03;-2.872e-02;3.495e-03];
        rj_jcj(:,:,3) = [2.7518e-02;3.9252e-02;-6.6502e-02];
        rj_jcj(:,:,4) = [-5.317e-02;1.04419e-01;2.7454e-02];
        rj_jcj(:,:,5) = [-1.1953e-02;4.1065e-02;-3.8437e-02];
        rj_jcj(:,:,6) = [6.0149e-02;-1.4117e-02;-1.0517e-02];
        rj_jcj(:,:,7) = [1.0517e-02;-4.252e-03;6.1597e-02];

        Ij_cj(:,:,1) = symmetrize(7.0337e-01 ,-1.3900e-04 ,6.7720e-03 ...
                                             ,7.0661e-01  ,1.9169e-02 ...
                                                          ,9.1170e-03);
        Ij_cj(:,:,2) = symmetrize(7.9620e-03 ,-3.9250e-03 ,1.0254e-02 ...
                                             ,2.8110e-02  ,7.0400e-04 ...
                                                          ,2.5995e-02);
        Ij_cj(:,:,3) = symmetrize(3.7242e-02 ,-4.7610e-03 ,-1.1396e-02 ...
                                             ,-1.1396e-02 ,-1.2805e-02 ...
                                                          ,1.0830e-02);
        Ij_cj(:,:,4) = symmetrize(2.5853e-02 ,7.7960e-03  ,-1.3320e-03 ...
                                             ,1.9552e-02  ,8.6410e-03 ...
                                                          ,2.8323e-02);
        Ij_cj(:,:,5) = symmetrize(3.5549e-02 ,-2.1170e-03 ,-4.0370e-03 ...
                                             ,2.9474e-02  ,2.2900e-04 ...
                                                          ,8.6270e-03);
        Ij_cj(:,:,6) = symmetrize(1.9640e-03 ,1.0900e-04  ,-1.1580e-03 ...
                                             ,4.3540e-03  ,3.4100e-04 ...
                                                          ,5.4330e-03);
        Ij_cj(:,:,7) = symmetrize(1.2516e-02 ,-4.2800e-04 ,-1.1960e-03 ...
                                             ,1.0027e-02  ,-7.4100e-04 ...
                                                          ,4.8150e-03);
    else
        m_j = 0;
    
        rj_jcj = zeros(3,1);

        Ij_cj = zeros(3,3);
    end

    n = length(m_j);
    np = 10;

    dyn.m_j = m_j;
    dyn.Ij_j = zeros(3,3,n);
    dyn.dj_j = zeros(3,1,n);
    dyn.pj_j = zeros(np,1,n);
    for j = 1:n
        S_rj_jcj = SkewSym(rj_jcj(:,:,j));
        dyn.Ij_j(:,:,j) = Ij_cj(:,:,j) - dyn.m_j(j)*S_rj_jcj*S_rj_jcj;
        dyn.dj_j(:,:,j) = dyn.m_j(j)*rj_jcj(:,:,j);
    
        dyn.pj_j(:,:,j) = [SymVec(dyn.Ij_j(:,:,j));dyn.dj_j(:,:,j);dyn.m_j(j)];
    end

end